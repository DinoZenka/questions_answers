{"version":3,"sources":["components/question.js","App.js","index.js"],"names":["Question","question","id","changeVal","value","className","htmlFor","type","onChange","name","placeholder","required","App","React","useState","questions","setQuestions","answers","setAnswers","isLoading","setLoading","useEffect","a","fetch","then","data","json","getchData","newObj","i","val","localStorage","getItem","event","newAnswers","target","map","elem","newValue","onClick","e","flag","Object","keys","setItem","clear","alert","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAqBeA,EAnBE,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAE3C,OACE,sBAAKC,UAAU,qBAAf,UACE,uBAAOA,UAAU,WAAWC,QAAO,eAAUJ,GAA7C,SAAoDD,IACpD,uBACEC,GAAE,eAAUA,GACZG,UAAU,SACVE,KAAK,OACLH,MAAOA,EACPI,SAAUL,EACVM,KAAMR,EACNS,YAAa,6EACbC,UAAU,QCoEHC,MA/Ef,WAAgB,IAAD,EACqBC,IAAMC,SAAS,IADpC,mBACNC,EADM,KACKC,EADL,OAEiBH,IAAMC,SAAS,IAFhC,mBAENG,EAFM,KAEGC,EAFH,OAGmBL,IAAMC,UAAS,GAHlC,mBAGNK,EAHM,KAGKC,EAHL,KAKbP,IAAMQ,WAAU,YACC,uCAAG,4BAAAC,EAAA,6DAChBF,GAAW,GADK,SAEGG,MAAM,aAAaC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAFxC,OAEVD,EAFU,OAGhBT,EAAaS,EAAKA,MAClBL,GAAW,GAJK,2CAAH,qDAMfO,KACC,IAEHd,IAAMQ,WAAU,WACd,IADoB,EACdO,EAAS,GADK,cAENb,GAFM,IAEpB,2BAAyB,CAAC,IAAjBc,EAAgB,QACjBC,EAAMC,aAAaC,QAAQH,EAAE5B,UACnC2B,EAAOC,EAAE5B,UAAY6B,GAAY,IAJf,8BAMpBZ,EAAWU,KACV,CAACb,IAEJ,IAAMP,EAAW,SAACyB,GAChB,IAAMC,EAAU,2BACXjB,GADW,kBAEbgB,EAAME,OAAO1B,KAAOwB,EAAME,OAAO/B,QAEpCc,EAAWgB,IAwBb,OACE,qBAAK7B,UAAU,iBAAf,SAEIc,EACI,uBAAMd,UAAU,OAAhB,UAEEU,EAAUqB,KAAI,SAAAC,GACZ,IAAMC,EAAWrB,EAAQoB,EAAKpC,UAC9B,OAAO,cAAC,EAAD,CACLA,SAAUoC,EAAKpC,SAEfC,GAAImC,EAAKnC,GACTC,UAAWK,EACXJ,MAAOkC,GAAsB,IAHxBD,EAAKnC,OAOhB,wBAAQG,UAAU,cAAckC,QAtC3B,SAACC,GAId,IAHA,IACIC,GAAO,EACLb,EAAS,GACf,MAHac,OAAOC,KAAK1B,GAGzB,eAAoB,CAAf,IAAIY,EAAC,KACW,KAAfZ,EAAQY,KACVY,GAAO,GAETV,aAAaa,QAAQf,EAAGZ,EAAQY,IAChCD,EAAOC,GAAK,GAEVY,GACFV,aAAac,QACbC,MAAM,4FAENA,MAAM,gGACN5B,EAAWU,IAEbY,EAAEO,kBAoBM,uEAEA,oDCvEZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.20d8f714.chunk.js","sourcesContent":["import React from 'react';\n\nconst Question = ({ question, id, changeVal, value }) => {\n\n  return (\n    <div className=\"question-container\">\n      <label className=\"question\" htmlFor={`input${id}`}>{question}</label>\n      <input\n        id={`input${id}`}\n        className=\"answer\"\n        type=\"text\"\n        value={value}\n        onChange={changeVal}\n        name={question}\n        placeholder={\"*Введите текст\"}\n        required={true}\n      ></input>\n    </div>\n  )\n}\n\nexport default Question;\n","import './App.css';\nimport React from 'react';\nimport Question from './components/question';\n\nfunction App() {\n  const [questions, setQuestions] = React.useState([]);\n  const [answers, setAnswers] = React.useState({});\n  const [isLoading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    const getchData = async () => {\n      setLoading(false);\n      const data = await fetch('data.json').then(data => data.json());\n      setQuestions(data.data);\n      setLoading(true);\n    }\n    getchData();\n  }, []);\n\n  React.useEffect(() => {\n    const newObj = {};\n    for (let i of questions) {\n      const val = localStorage.getItem(i.question);\n      newObj[i.question] = val ? val : \"\";\n    }\n    setAnswers(newObj);\n  }, [questions])\n\n  const onChange = (event) => {\n    const newAnswers = {\n      ...answers,\n      [event.target.name]: event.target.value\n    }\n    setAnswers(newAnswers);\n  }\n\n  const onSend = (e) => {\n    const keys = Object.keys(answers);\n    let flag = false;\n    const newObj = {}\n    for (let i of keys) {\n      if (answers[i] === \"\") {\n        flag = true;\n      }\n      localStorage.setItem(i, answers[i]);\n      newObj[i] = \"\";\n    }\n    if (flag) {\n      localStorage.clear();\n      alert('Введите все поля');\n    } else {\n      alert(`Данные сохранены!`);\n      setAnswers(newObj);\n    }\n    e.preventDefault();\n  }\n\n  return (\n    <div className=\"form-container\">\n      {\n        isLoading\n          ? <form className=\"form\">\n            {\n              questions.map(elem => {\n                const newValue = answers[elem.question];\n                return <Question\n                  question={elem.question}\n                  key={elem.id}\n                  id={elem.id}\n                  changeVal={onChange}\n                  value={newValue ? newValue : \"\"}\n                />\n              })\n            }\n            <button className=\"send-button\" onClick={onSend}>Отправить</button>\n          </form>\n          : <h1>Loading data...</h1>\n      }\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}